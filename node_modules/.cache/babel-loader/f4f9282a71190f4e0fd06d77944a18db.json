{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\shivam bale\\\\bootstrap-rfs-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"C:\\\\Users\\\\shivam bale\\\\bootstrap-rfs-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\shivam bale\\\\bootstrap-rfs-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\shivam bale\\\\bootstrap-rfs-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\shivam bale\\\\bootstrap-rfs-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\shivam bale\\\\bootstrap-rfs-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\shivam bale\\\\bootstrap-rfs-app\\\\src\\\\components\\\\Layout\\\\SignUp.js\";\nimport React, { Component } from 'react';\nimport classes from './SignUp.module.css';\nimport { MDBContainer, MDBRow, MDBCol, MDBBtn, MDBInput } from 'mdbreact';\nimport nsVerticalLogo from \"../../assets/NS_logo_Vertical.svg\";\nvar mainurl = 'https://gentle-retreat-77560.herokuapp.com'; //const mainurl = 'http://localhost:5000';//\n\nimport ReactDOM from \"react-dom\";\n\nvar SignUp =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(SignUp, _Component);\n\n  //form validation\n  function SignUp(props) {\n    var _this;\n\n    _classCallCheck(this, SignUp);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SignUp).call(this, props));\n\n    _this.handleValidation = function (target) {\n      var name = target.name,\n          value = target.value;\n      var fieldValidationErrors = _this.state.formErrors;\n      var validity = _this.state.formValidity;\n      var isEmail = name === \"email\";\n      var isPassword = name === \"password\";\n      var emailTest = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]{2,}$/i;\n      validity[name] = value.length > 0;\n      fieldValidationErrors[name] = validity[name] ? \"\" : \"\".concat(name, \" is required and cannot be empty\");\n\n      if (validity[name]) {\n        if (isEmail) {\n          validity[name] = emailTest.test(value);\n          fieldValidationErrors[name] = validity[name] ? \"\" : \"\".concat(name, \" should be a valid email address\");\n        }\n\n        if (isPassword) {\n          validity[name] = value.length >= 3;\n          fieldValidationErrors[name] = validity[name] ? \"\" : \"\".concat(name, \" should be 3 characters minimum\");\n        }\n      }\n\n      _this.setState({\n        formErrors: fieldValidationErrors,\n        formValidity: validity\n      });\n    };\n\n    _this.handleSubmit = function (event) {\n      event.preventDefault();\n\n      _this.setState({\n        isSubmitting: true\n      });\n\n      var _this$state = _this.state,\n          formValues = _this$state.formValues,\n          formValidity = _this$state.formValidity;\n\n      if (Object.values(formValidity).every(Boolean)) {\n        alert(\"Form is validated! Submitting the form...\");\n\n        _this.setState({\n          isSubmitting: false\n        });\n      } else {\n        for (var key in formValues) {\n          var target = {\n            name: key,\n            value: formValues[key]\n          };\n\n          _this.handleValidation(target);\n        }\n\n        _this.setState({\n          isSubmitting: false\n        });\n      }\n    };\n\n    _this.state = {\n      name: '',\n      email: '',\n      password: '',\n      confirmPassword: ''\n    };\n\n    _this.handleChange = function (e) {\n      var inputId = e.target.name;\n      var value = e.target.value;\n\n      _this.setState(_defineProperty({}, inputId, value));\n    };\n\n    _this.state = {\n      formValues: {\n        email: \"\",\n        password: \"\"\n      },\n      formErrors: {\n        email: \"\",\n        password: \"\"\n      },\n      formValidity: {\n        email: false,\n        password: false\n      },\n      isSubmitting: false\n    };\n    return _this;\n  }\n\n  _createClass(SignUp, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: classes.area,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        className: classes.header2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, \"Request for startups \"), React.createElement(\"img\", {\n        src: nsVerticalLogo,\n        className: classes.images,\n        alt: \"NS_Logo\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: classes.Signupstyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        value: \"message\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }), React.createElement(MDBContainer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, React.createElement(MDBRow, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, React.createElement(MDBCol, {\n        md: \"12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        class: \"login-form\",\n        action: mainurl + '/signup',\n        method: \"POST\",\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"h2 text-center mb-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, \"Sign up\"), React.createElement(\"div\", {\n        className: \"grey-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, React.createElement(MDBInput, {\n        class: \"form-control\",\n        label: \"User Name\",\n        type: \"text\",\n        icon: \"user\",\n        id: \"username\",\n        name: \"username\",\n        placeholder: \"username\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }), React.createElement(MDBInput, {\n        class: \"form-control\",\n        label: \"Email\",\n        icon: \"envelope\",\n        type: \"email\",\n        id: \"email\",\n        name: \"email\",\n        placeholder: \"email\",\n        className: \"form-control \".concat(formErrors.email ? \"is-invalid\" : \"\"),\n        onChange: this.handleChange,\n        value: formValues.email,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"invalid-feedback\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, formErrors.email), React.createElement(MDBInput, {\n        class: \"form-control\",\n        label: \"Password\",\n        type: \"password\",\n        icon: \"lock\",\n        id: \"password\",\n        name: \"password\",\n        placeholder: \"password\",\n        className: \"form-control \".concat(formErrors.password ? \"is-invalid\" : \"\"),\n        onChange: this.handleChange,\n        value: formValues.password,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"invalid-feedback\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, formErrors.password), React.createElement(MDBInput, {\n        class: \"form-control\",\n        type: \"password\",\n        label: \"confirm-password\",\n        icon: \"lock\",\n        id: \"confirmPassword\",\n        name: \"confirmPassword\",\n        placeholder: \"confirmpassword\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      })), React.createElement(MDBBtn, {\n        type: \"submit\",\n        disabled: isSubmitting,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, \"SignUp\")))))));\n    }\n  }]);\n\n  return SignUp;\n}(Component);\n\n;\nexport default SignUp;","map":{"version":3,"sources":["C:/Users/shivam bale/bootstrap-rfs-app/src/components/Layout/SignUp.js"],"names":["React","Component","classes","MDBContainer","MDBRow","MDBCol","MDBBtn","MDBInput","mainurl","ReactDOM","SignUp","props","handleValidation","target","name","value","fieldValidationErrors","state","formErrors","validity","formValidity","isEmail","isPassword","emailTest","length","test","setState","handleSubmit","event","preventDefault","isSubmitting","formValues","Object","values","every","Boolean","alert","key","email","password","confirmPassword","handleChange","e","inputId","area","header2","nsVerticalLogo","images","Signupstyle"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport classes from './SignUp.module.css';\r\nimport { MDBContainer, MDBRow, MDBCol, MDBBtn, MDBInput } from 'mdbreact';\r\nimport nsVerticalLogo from '../../assets/NS_logo_Vertical.svg';\r\nconst mainurl = 'https://gentle-retreat-77560.herokuapp.com';\r\n//const mainurl = 'http://localhost:5000';//\r\nimport ReactDOM from \"react-dom\";\r\n\r\n\r\n\r\nclass SignUp extends Component {\r\n  //form validation\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      formValues: {\r\n        email: \"\",\r\n        password: \"\"\r\n      },\r\n      formErrors: {\r\n        email: \"\",\r\n        password: \"\"\r\n      },\r\n      formValidity: {\r\n        email: false,\r\n        password: false\r\n      },\r\n      isSubmitting: false\r\n    };\r\n  }\r\n\r\n  handleValidation = target => {\r\n    const { name, value } = target;\r\n    const fieldValidationErrors = this.state.formErrors;\r\n    const validity = this.state.formValidity;\r\n    const isEmail = name === \"email\";\r\n    const isPassword = name === \"password\";\r\n    const emailTest = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]{2,}$/i;\r\n\r\n    validity[name] = value.length > 0;\r\n    fieldValidationErrors[name] = validity[name]\r\n      ? \"\"\r\n      : `${name} is required and cannot be empty`;\r\n\r\n    if (validity[name]) {\r\n      if (isEmail) {\r\n        validity[name] = emailTest.test(value);\r\n        fieldValidationErrors[name] = validity[name]\r\n          ? \"\"\r\n          : `${name} should be a valid email address`;\r\n      }\r\n      if (isPassword) {\r\n        validity[name] = value.length >= 3;\r\n        fieldValidationErrors[name] = validity[name]\r\n          ? \"\"\r\n          : `${name} should be 3 characters minimum`;\r\n      }\r\n    }\r\n\r\n    this.setState({\r\n      formErrors: fieldValidationErrors,\r\n      formValidity: validity\r\n    });\r\n  };\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n    this.setState({ isSubmitting: true });\r\n    const { formValues, formValidity } = this.state;\r\n    if (Object.values(formValidity).every(Boolean)) {\r\n      alert(\"Form is validated! Submitting the form...\");\r\n      this.setState({ isSubmitting: false });\r\n    } else {\r\n      for (let key in formValues) {\r\n        let target = {\r\n          name: key,\r\n          value: formValues[key]\r\n        };\r\n        this.handleValidation(target);\r\n      }\r\n      this.setState({ isSubmitting: false });\r\n    }\r\n  };\r\n\r\n\r\n\r\n\r\n  state = {\r\n    name: '',\r\n    email: '',\r\n    password: '',\r\n    confirmPassword: ''\r\n  }\r\n\r\n  handleChange = e => {\r\n    const inputId = e.target.name;\r\n    const value = e.target.value;\r\n    this.setState({ [inputId]: value })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className={classes.area}>\r\n        <h1 className={classes.header2}>Request for startups </h1>\r\n        <img src={nsVerticalLogo} className={classes.images} alt=\"NS_Logo\" />\r\n        <div className={classes.Signupstyle}>\r\n          <p value='message'></p>\r\n          <MDBContainer>\r\n            <MDBRow>\r\n              <MDBCol md=\"12\">\r\n                <form class=\"login-form\" action={mainurl + '/signup'} method=\"POST\" onSubmit={this.handleSubmit}>\r\n                  <p className=\"h2 text-center mb-4\">Sign up</p>\r\n                  <div className=\"grey-text\">\r\n                    <MDBInput class=\"form-control\"\r\n                      label=\"User Name\"\r\n                      type=\"text\"\r\n                      icon=\"user\"\r\n                      id=\"username\"\r\n                      name=\"username\"\r\n                      placeholder=\"username\" />\r\n                    <MDBInput class=\"form-control\"\r\n                      label=\"Email\"\r\n                      icon=\"envelope\"\r\n                      type=\"email\"\r\n                      id=\"email\"\r\n                      name=\"email\"\r\n                      placeholder=\"email\"\r\n                      className={`form-control ${\r\n                        formErrors.email ? \"is-invalid\" : \"\"\r\n                      }`} \r\n                      onChange={this.handleChange}\r\n                      value={formValues.email}\r\n                      />\r\n                   <div className=\"invalid-feedback\">{formErrors.email}</div>\r\n                    <MDBInput class=\"form-control\"\r\n                      label=\"Password\"\r\n                      type=\"password\"\r\n                      icon=\"lock\"\r\n                      id=\"password\"\r\n                      name=\"password\"\r\n                      placeholder=\"password\"\r\n                      className={`form-control ${\r\n                        formErrors.password ? \"is-invalid\" : \"\"\r\n                      }`} \r\n                      onChange={this.handleChange}\r\n                      value={formValues.password}\r\n                      />\r\n               <div className=\"invalid-feedback\">{formErrors.password}</div>     \r\n    \r\n\r\n                    <MDBInput class=\"form-control\"\r\n                      type=\"password\"\r\n                      label=\"confirm-password\"\r\n                      icon=\"lock\"\r\n                      id=\"confirmPassword\"\r\n                      name=\"confirmPassword\"\r\n                      placeholder=\"confirmpassword\" \r\n                      />\r\n                  </div>\r\n                  <MDBBtn   \r\n                     type=\"submit\"\r\n                     disabled={isSubmitting}>SignUp\r\n                     </MDBBtn>\r\n                </form>\r\n              </MDBCol>\r\n            </MDBRow>\r\n          </MDBContainer>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n};\r\n\r\nexport default SignUp;"]},"metadata":{},"sourceType":"module"}